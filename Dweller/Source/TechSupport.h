#pragma once

#pragma comment (lib, "dxgi.lib")

#include "../GUI/EvolvGen.h"

#include <dxgi.h>
#include <comdef.h>
#include <ShlObj_core.h>
#include <intrin.h>
#include <bitset>
#include <array>

// Технические инструменты.
// TO-DO: лог, рефакторинг вендора процессора.
class TechSupport {
private:

	//---> Данные.
	//========================================================================================================================//
	// Указатель на время последнего кадра в секундах.
	double* GlobalTimeAsSeconds;
	// Время последнего кадра.
	double LastFrameTime = 0;
	// Текущее количество кадров в секунду.
	unsigned int CurrentFPS = 0;
	// Количество кадров в секунду за прошедшую секунду.
	unsigned int LastSecondFPS = 0;

	//---> Графические компоненты.
	//========================================================================================================================//
	// Указатель на окно отрисовки.
	sf::RenderWindow* MainWindow;
	// Вектор надписей для отображения технических данных.
	std::vector<sf::Text> TechLabels;

	//---> Логические переключатели и настройки.
	//========================================================================================================================//
	// Отображать ли FPS.
	bool IsShowFPS = true;
	// Перечисление индексов доступа к строкам технических данных.
	enum { tsFPS = 0 };

protected:
	
	//---> Получение данных.
	//========================================================================================================================//
	// Получает список установленных видеокарт.
	std::vector<std::string> GetGPU();

public:

	// Конструктор: задаёт окно отрисовки технических данных и счётчик времени.
	TechSupport(sf::RenderWindow* MainWindow, double* GlobalTimeAsSeconds);

	// Переключить отображение FPS.
	void SwitchShowingFPS(bool IsShowFPS);

	// Возвращает статус отображения FPS.
	bool IsShowingFPS();

	// Выполнение цикла обновления класса.
	void Update();
};

